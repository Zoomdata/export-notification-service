#!/bin/bash
#
# This shell script takes care of starting and stopping ${installer.app.name} zoomdata web service
#
# chkconfig: - 80 20
#
### BEGIN INIT INFO
# Provides: zoomdata-edc
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Default-Start:
# Default-Stop:
# Short-Description: start and stop zoomdata-edc
### END INIT INFO

SCRIPT_PATH=$( readlink /usr/bin/export-notification-service )
BASE_PATH=${SCRIPT_PATH%/*/*}
PID_FILE="/var/run/export-notification-service.pid"
LOGS_HOME="$BASE_PATH/logs"
EXEC_APP="nohup /usr/bin/export-notification-service >> $LOGS_HOME/export-notification-service.log 2>&1"
CAPTURE_PID="echo \$! > $PID_FILE"

validate() {
    validatePort 9090 exp_serv_port
}

start() {
    echo "Starting Zoomdata Export Service"

    su ${service.user} -s /bin/bash -c "$EXEC_APP & $CAPTURE_PID"
    _read_pid
    echo "Started Zoomdata Export Service, pid: $PID"
}

stop() {
    _read_pid

    rm -f $PID_FILE

    if [ -n "$PID" ] && ps -p "$PID" > /dev/null;
    then
        echo "Stopping Zoomdata Export Service, pid:$PID"
        kill $PID
    fi

}

status() {
    _read_pid

    if [ -n "$PID" ] && ps -p "$PID" > /dev/null;
    then
        echo "Zoomdata Export Service is running with pid: $PID"
    else
        echo "Zoomdata Export Service is not running"
    fi
}

_read_pid() {
    if [ -f $PID_FILE ];
    then
        PID=$(cat $PID_FILE)
    fi

    if [ -z "$PID" ] || ! ps -p "$PID" > /dev/null;
    then
        PID=$(ps ax |grep java |grep export-notification-service.jar |grep -v grep |awk '{print $1}')
    fi
}

function validatePort {
  line=$(ss -ltn | grep $1 |  grep LIST)
  if [ $? -eq 0 ]
  then
   echo $2=$1 is busy
   exit 1
  fi
}

case $1 in
start)
  start
;;
stop)
  stop
;;
restart)
  stop

  start
;;
status)
  status
;;
validate)
  validate
;;
esac
exit 0

